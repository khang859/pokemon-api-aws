name: Deploy Pokemon API

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Bucket formation stack
        run: |
          aws cloudformation deploy \
            --template-file cf.bucket.config.yml \
            --stack-name pokemon-api-code-bucket \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Zip and upload lambda code
        run: |
          zip -j pokemon_get.zip lambdas/pokemon/get/index.js
          aws s3 cp pokemon_get.zip s3://pokemon-lambda-code/pokemon_api/pokemon_get.zip

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file cf.api.config.yml \
            --stack-name pokemon-api \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Get stack output
        run: |
          echo $(aws cloudformation describe-stacks --stack-name pokemon-api --query 'Stacks[0].Outputs' --output json) > stackoutput.json

      - name: Update lambda code
        run: |
          lambda_name=$(jq -r '.[] | select(.OutputKey=="PokemonApiLambdaFunctionName") | .OutputValue' stackoutput.json)
          echo "Updating lambda code for $lambda_name"
          aws lambda update-function-code --function-name $lambda_name --s3-bucket pokemon-lambda-code --s3-key pokemon_api/pokemon_get.zip
      
      - name: Deploy to api
        run: |
          api_id=$(jq -r '.[] | select(.OutputKey=="PokemonApiGateway") | .OutputValue' stackoutput.json)
          echo "Deploying to api $api_id"
          aws apigateway create-deployment --rest-api-id $api_id --stage-name api